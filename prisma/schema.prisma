generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String
  password  String
  skill     Skill[]
  Project   Project[]
  token     String
  createdAt DateTime  @default(now())
}

model Skill {
  id        String   @id @default(uuid())
  name      String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
}

model Project {
  id               String      @id @default(uuid())
  name             String
  user             User        @relation(fields: [userId], references: [id])
  userId           String
  techStack        TechStack[]
  tags             Tags[]
  thumbnail        String[]
  description      String
  createdAt        DateTime?   @default(now())
  hostedPlatform   String      @default("")
  projectCreatedAt String?     @default("")
  hostedLink       String      @unique @default("")
  githubLink       String?     @unique @default("")
}

model TechStack {
  id          String    @id @default(uuid())
  name        String    @default("Untiltled")
  description String    @default("Not available")
  project     Project?  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId   String?
  createdAt   DateTime? @default(now())
}

model Message {
  id        String   @id @default(uuid())
  name      String
  email     String
  number    String   @default("")
  message   String
  createdAt DateTime @default(now())
}

model Tags {
  id        String    @id @default(uuid())
  name      String    @default("Untitled")
  project   Project?  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String?
  createdAt DateTime? @default(now())
}

model Otp {
  id        String   @id @default(uuid())
  otp       String   @unique
  email     String   @unique
  createdAt DateTime @default(now())
}
